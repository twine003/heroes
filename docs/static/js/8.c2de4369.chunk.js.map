{"version":3,"sources":["routes.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/_nav.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["CaractersScreen","React","lazy","routes","path","exact","name","component","loading","className","TheContent","fluid","fallback","map","route","idx","render","props","from","to","memo","TheFooter","fixed","href","target","rel","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","withSubheader","inHeader","onClick","val","includes","type","height","alt","_minav","_tag","icon","customClasses","TheSidebar","show","sidebar","console","log","onShowChange","src","items","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout"],"mappings":"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","file":"static/js/8.c2de4369.chunk.js","sourcesContent":["import React from 'react';\n\n// const Toaster = React.lazy(() => import('./views/notifications/toaster/Toaster'));\n// const Tables = React.lazy(() => import('./views/base/tables/Tables'));\n\n// const Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'));\n// const Cards = React.lazy(() => import('./views/base/cards/Cards'));\n// const Carousels = React.lazy(() => import('./views/base/carousels/Carousels'));\n// const Collapses = React.lazy(() => import('./views/base/collapses/Collapses'));\n// const BasicForms = React.lazy(() => import('./views/base/forms/BasicForms'));\n\n// const Jumbotrons = React.lazy(() => import('./views/base/jumbotrons/Jumbotrons'));\n// const ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'));\n// const Navbars = React.lazy(() => import('./views/base/navbars/Navbars'));\n// const Navs = React.lazy(() => import('./views/base/navs/Navs'));\n// const Paginations = React.lazy(() => import('./views/base/paginations/Pagnations'));\n// const Popovers = React.lazy(() => import('./views/base/popovers/Popovers'));\n// const ProgressBar = React.lazy(() => import('./views/base/progress-bar/ProgressBar'));\n// const Switches = React.lazy(() => import('./views/base/switches/Switches'));\n\n// const Tabs = React.lazy(() => import('./views/base/tabs/Tabs'));\n// const Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'));\n// const BrandButtons = React.lazy(() => import('./views/buttons/brand-buttons/BrandButtons'));\n// const ButtonDropdowns = React.lazy(() => import('./views/buttons/button-dropdowns/ButtonDropdowns'));\n// const ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'));\n// const Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'));\n// const Charts = React.lazy(() => import('./views/charts/Charts'));\n// const Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\n// const CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'));\n// const Flags = React.lazy(() => import('./views/icons/flags/Flags'));\n// const Brands = React.lazy(() => import('./views/icons/brands/Brands'));\n// const Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'));\n// const Badges = React.lazy(() => import('./views/notifications/badges/Badges'));\n// const Modals = React.lazy(() => import('./views/notifications/modals/Modals'));\n// const Colors = React.lazy(() => import('./views/theme/colors/Colors'));\n// const Typography = React.lazy(() => import('./views/theme/typography/Typography'));\n// const Widgets = React.lazy(() => import('./views/widgets/Widgets'));\n// const Users = React.lazy(() => import('./views/users/Users'));\n// const User = React.lazy(() => import('./views/users/User'));\n\nconst CaractersScreen = React.lazy(() => import('./views/caracters/CaractersScreen'));\nconst CaracterScreen = React.lazy(() => import('./views/caracters/CaracterScreen'));\nconst storieScreen = React.lazy(() => import('./views/stories/StorieScreen'));\nconst storiesScreen = React.lazy(() => import('./views/stories/StoriesScreen'));\n\n\nconst routes = [\n\n\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/caracter/:id', name: 'Caracter', component: CaracterScreen },\n  { path: '/caracters', name: 'Caracters', component: CaractersScreen },\n  { path: '/storie/:id', name: 'Storie', component: storieScreen },\n  { path: '/stories', name: 'Stories', component: storiesScreen },\n\n\n\n\n\n  // { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  // { path: '/theme', name: 'Theme', component: Colors, exact: true },\n  // { path: '/theme/colors', name: 'Colors', component: Colors },\n  // { path: '/theme/typography', name: 'Typography', component: Typography },\n  // { path: '/base', name: 'Base', component: Cards, exact: true },\n  // { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  // { path: '/base/cards', name: 'Cards', component: Cards },\n  // { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  // { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  // { path: '/base/forms', name: 'Forms', component: BasicForms },\n  // { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\n  // { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  // { path: '/base/navbars', name: 'Navbars', component: Navbars },\n  // { path: '/base/navs', name: 'Navs', component: Navs },\n  // { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  // { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  // { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\n  // { path: '/base/switches', name: 'Switches', component: Switches },\n  // { path: '/base/tables', name: 'Tables', component: Tables },\n  // { path: '/base/tabs', name: 'Tabs', component: Tabs },\n  // { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  // { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\n  // { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  // { path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns },\n  // { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  // { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\n  // { path: '/charts', name: 'Charts', component: Charts },\n  // { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  // { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  // { path: '/icons/flags', name: 'Flags', component: Flags },\n  // { path: '/icons/brands', name: 'Brands', component: Brands },\n  // { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\n  // { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  // { path: '/notifications/badges', name: 'Badges', component: Badges },\n  // { path: '/notifications/modals', name: 'Modals', component: Modals },\n  // { path: '/notifications/toaster', name: 'Toaster', component: Toaster },\n  // { path: '/widgets', name: 'Widgets', component: Widgets },\n  // { path: '/users', exact: true,  name: 'Users', component: Users },\n  // { path: '/users/:id', exact: true, name: 'User Details', component: User }\n];\n\nexport default routes;\n","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n  \nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/caracters\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI</a>\n        <span className=\"ml-1\">&copy; 2020 creativeLabs.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI for React</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CSubheader,\n  CBreadcrumbRouter\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\n\n// import { \n//   TheHeaderDropdown,\n//   TheHeaderDropdownMssg,\n//   TheHeaderDropdownNotif,\n//   TheHeaderDropdownTasks\n// }  from './index'\n\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        {/* <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem  className=\"px-3\">\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink>Settings</CHeaderNavLink>\n        </CHeaderNavItem> */}\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n        {/* <TheHeaderDropdownNotif/>\n        <TheHeaderDropdownTasks/>\n        <TheHeaderDropdownMssg/>\n        <TheHeaderDropdown/> */}\n      </CHeaderNav>\n\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter \n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \n          routes={routes} \n        />\n          {/* <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n            <CLink className=\"c-subheader-nav-link\"href=\"#\">\n              <CIcon name=\"cil-speech\" alt=\"Settings\" />\n            </CLink>\n            <CLink \n              className=\"c-subheader-nav-link\" \n              aria-current=\"page\" \n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>\n          </div> */}\n      </CSubheader>\n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\n\n// const _nav =  [\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Dashboard',\n//     to: '/dashboard',\n//     icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\n//     badge: {\n//       color: 'info',\n//       text: 'NEW',\n//     }\n//   },\n//   {\n//     _tag: 'CSidebarNavTitle',\n//     _children: ['Theme']\n//   },\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Colors',\n//     to: '/theme/colors',\n//     icon: 'cil-drop',\n//   },\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Typography',\n//     to: '/theme/typography',\n//     icon: 'cil-pencil',\n//   },\n//   {\n//     _tag: 'CSidebarNavTitle',\n//     _children: ['Components']\n//   },\n//   {\n//     _tag: 'CSidebarNavDropdown',\n//     name: 'Base',\n//     route: '/base',\n//     icon: 'cil-puzzle',\n//     _children: [\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Breadcrumb',\n//         to: '/base/breadcrumbs',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Cards',\n//         to: '/base/cards',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Carousel',\n//         to: '/base/carousels',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Collapse',\n//         to: '/base/collapses',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Forms',\n//         to: '/base/forms',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Jumbotron',\n//         to: '/base/jumbotrons',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'List group',\n//         to: '/base/list-groups',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Navs',\n//         to: '/base/navs',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Navbars',\n//         to: '/base/navbars',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Pagination',\n//         to: '/base/paginations',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Popovers',\n//         to: '/base/popovers',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Progress',\n//         to: '/base/progress-bar',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Switches',\n//         to: '/base/switches',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Tables',\n//         to: '/base/tables',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Tabs',\n//         to: '/base/tabs',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Tooltips',\n//         to: '/base/tooltips',\n//       },\n//     ],\n//   },\n//   {\n//     _tag: 'CSidebarNavDropdown',\n//     name: 'Buttons',\n//     route: '/buttons',\n//     icon: 'cil-cursor',\n//     _children: [\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Buttons',\n//         to: '/buttons/buttons',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Brand buttons',\n//         to: '/buttons/brand-buttons',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Buttons groups',\n//         to: '/buttons/button-groups',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Dropdowns',\n//         to: '/buttons/button-dropdowns',\n//       }\n//     ],\n//   },\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Charts',\n//     to: '/charts',\n//     icon: 'cil-chart-pie'\n//   },\n//   {\n//     _tag: 'CSidebarNavDropdown',\n//     name: 'Icons',\n//     route: '/icons',\n//     icon: 'cil-star',\n//     _children: [\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'CoreUI Free',\n//         to: '/icons/coreui-icons',\n//         badge: {\n//           color: 'success',\n//           text: 'NEW',\n//         },\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'CoreUI Flags',\n//         to: '/icons/flags',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'CoreUI Brands',\n//         to: '/icons/brands',\n//       },\n//     ],\n//   },\n//   {\n//     _tag: 'CSidebarNavDropdown',\n//     name: 'Notifications',\n//     route: '/notifications',\n//     icon: 'cil-bell',\n//     _children: [\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Alerts',\n//         to: '/notifications/alerts',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Badges',\n//         to: '/notifications/badges',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Modal',\n//         to: '/notifications/modals',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Toaster',\n//         to: '/notifications/toaster'\n//       }\n//     ]\n//   },\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Widgets',\n//     to: '/widgets',\n//     icon: 'cil-calculator',\n//     badge: {\n//       color: 'info',\n//       text: 'NEW',\n//     },\n//   },\n//   {\n//     _tag: 'CSidebarNavDivider'\n//   },\n//   {\n//     _tag: 'CSidebarNavTitle',\n//     _children: ['Extras'],\n//   },\n//   {\n//     _tag: 'CSidebarNavDropdown',\n//     name: 'Pages',\n//     route: '/pages',\n//     icon: 'cil-star',\n//     _children: [\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Login',\n//         to: '/login',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Register',\n//         to: '/register',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Error 404',\n//         to: '/404',\n//       },\n//       {\n//         _tag: 'CSidebarNavItem',\n//         name: 'Error 500',\n//         to: '/500',\n//       },\n//     ],\n//   },\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Disabled',\n//     icon: 'cil-ban',\n//     badge: {\n//       color: 'secondary',\n//       text: 'NEW',\n//     },\n//     addLinkClass: 'c-disabled',\n//     'disabled': true\n//   },\n//   {\n//     _tag: 'CSidebarNavDivider',\n//     className: 'm-2'\n//   },\n//   {\n//     _tag: 'CSidebarNavTitle',\n//     _children: ['Labels']\n//   },\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Label danger',\n//     to: '',\n//     icon: {\n//       name: 'cil-star',\n//       className: 'text-danger'\n//     },\n//     label: true\n//   },\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Label info',\n//     to: '',\n//     icon: {\n//       name: 'cil-star',\n//       className: 'text-info'\n//     },\n//     label: true\n//   },\n//   {\n//     _tag: 'CSidebarNavItem',\n//     name: 'Label warning',\n//     to: '',\n//     icon: {\n//       name: 'cil-star',\n//       className: 'text-warning'\n//     },\n//     label: true\n//   },\n//   {\n//     _tag: 'CSidebarNavDivider',\n//     className: 'm-2'\n//   }\n// ]\n\n\nconst _minav = [\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Characters',\n    to: '/dashboard',\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\n    // badge: {\n    //   color: 'info',\n    //   text: 'NEW',\n    // }\n  },\n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Theme']\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Colors',\n  //   to: '/theme/colors',\n  //   icon: 'cil-drop',\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Typography',\n  //   to: '/theme/typography',\n  //   icon: 'cil-pencil',\n  // },\n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Components']\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Base',\n  //   route: '/base',\n  //   icon: 'cil-puzzle',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Forms',\n  //       to: '/base/forms',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Jumbotron',\n  //       to: '/base/jumbotrons',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Navs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Navbars',\n  //       to: '/base/navbars',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Progress',\n  //       to: '/base/progress-bar',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Switches',\n  //       to: '/base/switches',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Tabs',\n  //       to: '/base/tabs',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Buttons',\n  //   route: '/buttons',\n  //   icon: 'cil-cursor',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Brand buttons',\n  //       to: '/buttons/brand-buttons',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Dropdowns',\n  //       to: '/buttons/button-dropdowns',\n  //     }\n  //   ],\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: 'cil-chart-pie'\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Icons',\n  //   route: '/icons',\n  //   icon: 'cil-star',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Notifications',\n  //   route: '/notifications',\n  //   icon: 'cil-bell',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Toaster',\n  //       to: '/notifications/toaster'\n  //     }\n  //   ]\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: 'cil-calculator',\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   _tag: 'CSidebarNavDivider'\n  // },\n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Extras'],\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Pages',\n  //   route: '/pages',\n  //   icon: 'cil-star',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Disabled',\n  //   icon: 'cil-ban',\n  //   badge: {\n  //     color: 'secondary',\n  //     text: 'NEW',\n  //   },\n  //   addLinkClass: 'c-disabled',\n  //   'disabled': true\n  // },\n  // {\n  //   _tag: 'CSidebarNavDivider',\n  //   className: 'm-2'\n  // },\n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Labels']\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Label danger',\n  //   to: '',\n  //   icon: {\n  //     name: 'cil-star',\n  //     className: 'text-danger'\n  //   },\n  //   label: true\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Label info',\n  //   to: '',\n  //   icon: {\n  //     name: 'cil-star',\n  //     className: 'text-info'\n  //   },\n  //   label: true\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Label warning',\n  //   to: '',\n  //   icon: {\n  //     name: 'cil-star',\n  //     className: 'text-warning'\n  //   },\n  //   label: true\n  // },\n  // {\n  //   _tag: 'CSidebarNavDivider',\n  //   className: 'm-2'\n  // }\n]\nexport default _minav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n  CImg,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch();\n  const show = useSelector(state => state.sidebar.sidebarShow);\n  console.log('show', show);\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        {/* <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        />\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        /> */}\n\n        <CImg\n          className=\"c-sidebar-brand-minimized\"\n          height={35}\n          src={'react-marvel.png'}\n        />\n        <CImg\n          className=\"c-sidebar-brand-full\"\n          height={35}\n          src={'react-marvel.png'}\n        />\n      </CSidebarBrand>\n      <CSidebarNav>\n\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","import React from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\n\nconst TheLayout = () => {\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n"],"sourceRoot":""}